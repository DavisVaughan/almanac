% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rbundle-add.R
\name{rbundle-add}
\alias{rbundle-add}
\alias{add_cacher}
\alias{add_rdate}
\alias{add_exdate}
\title{Add to an rbundle}
\usage{
add_cacher(x, cacher)

add_rdate(x, rdate)

add_exdate(x, exdate)
}
\arguments{
\item{x}{\verb{[rbundle]}

An rbundle to add to.}

\item{rdate}{\verb{[Date]}

Dates to forcibly include in the rbundle.}

\item{exdate}{\verb{[Date]}

Dates to forcibly exclude from the rbundle.}

\item{rrule}{\verb{[rrule]}

An rrule to add to the rbundle.}

\item{rbundle}{\verb{[rbundle]}

An rbundle to merge with \code{x}.}
}
\description{
\itemize{
\item \code{add_cacher()} adds a rrule to an rbundle.
\item \code{add_rdate()} adds a rdate to an rbundle. rdates are singular
special cased dates that are forcibly included in the recurrence set.
\item \code{add_exdate()} adds an exdate to a rbundle. exdates are singular
special cased dates that are forcibly excluded from the recurrence set.
}
}
\details{
In terms of priority:
\itemize{
\item An exdate will never be included.
\item A rdate will always be included if it is not also an exdate.
\item An event generated from a rrule will always be included if it is not
also an exdate.
}

Combining two rrules into the same rbundle is a way of joining them using
an "or" condition. For example, joining the following recurrence rules
would translate to "the 5th day of the month or any Tuesday".\preformatted{on_5th_of_the_month <- monthly() \%>\%
  on_mday(5)

on_tuesday <- weekly() \%>\%
  on_wday("Tuesday")

rbundle() \%>\%
  add_cacher(on_5th_of_the_month) \%>\%
  add_cacher(on_tuesday)
}
}
\examples{
on_thanksgiving <- yearly() \%>\%
  recur_on_wday("Thurs", 4) \%>\%
  recur_on_ymonth("Nov")

on_christmas <- yearly() \%>\%
  recur_on_mday(25) \%>\%
  recur_on_ymonth("Dec")

on_labor_day <- monthly() \%>\%
  recur_on_ymonth("Sep") \%>\%
  recur_on_wday("Mon", 1)

rb <- rbundle() \%>\%
  add_cacher(on_thanksgiving) \%>\%
  add_cacher(on_christmas) \%>\%
  add_cacher(on_labor_day)

# Thanksgiving, Christmas, or Labor Day
alma_search("2019-01-01", "2021-01-01", rb)

# Except Labor Day in 2019
rb2 <- add_exdate(rb, "2019-09-02")

alma_search("2019-01-01", "2021-01-01", rb2)

}
