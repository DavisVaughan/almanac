% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sch-add.R
\name{sch-add}
\alias{sch-add}
\alias{sch_rrule}
\alias{sch_rdate}
\alias{sch_exdate}
\alias{sch_add_schedule}
\title{Add to a schedule}
\usage{
sch_rrule(x, rrule)

sch_rdate(x, rdate)

sch_exdate(x, exdate)

sch_add_schedule(x, schedule)
}
\arguments{
\item{x}{\code{[schedule]}

A schedule.}

\item{rrule}{\code{[rrule]}

An rrule to add to the schedule.}

\item{rdate}{\code{[Date]}

Dates to forcibly include in the schedule.}

\item{exdate}{\code{[Date]}

Dates to forcibly exclude from the schedule.}

\item{schedule}{\code{[schedule]}

A schedule to merge with \code{x}.}
}
\description{
\itemize{
\item \code{sch_rrule()} adds a \code{rrule} to a schedule.
\item \code{sch_rdate()} adds a \code{rdate} to a schedule. \code{rdate}s are singular
special cased dates that are forcibly included in the schedule.
\item \code{sch_exdate()} adds a \code{exdate} to a schedule. \code{exdate}s are singular
special cased dates that are forcibly excluded from the schedule.
\item \code{sch_add_schedule()} merges two schedules together.
}
}
\details{
In terms of priority:
\itemize{
\item An \code{exdate} will never be included.
\item A \code{rdate} will always be included if it is not also an \code{exdate}.
\item An event generated from a \code{rrule} will always be included if it is not
also an \code{exdate}.
}

Combining two \code{rrule}s into the same schedule is a way of joining them using
an "or" condition. For example, joining \code{monthly() \%>\% on_mday(5)} with
\code{weekly() \%>\% on_wday("Tuesday")} would translate to "the 5th day of the
month or any Tuesday".
}
\examples{
library(lubridate, warn.conflicts = FALSE)

on_thanksgiving <- yearly() \%>\%
  recur_on_wday("Thurs", 4) \%>\%
  recur_on_ymonth("Nov")

on_christmas <- yearly() \%>\%
  recur_on_mday(25) \%>\%
  recur_on_ymonth("Dec")

on_labor_day <- monthly() \%>\%
  recur_on_ymonth("Sep") \%>\%
  recur_on_wday("Mon", 1)

sch <- schedule() \%>\%
  sch_rrule(on_thanksgiving) \%>\%
  sch_rrule(on_christmas) \%>\%
  sch_rrule(on_labor_day)

# Thanksgiving, Christmas, or Labor Day
sch_seq("2019-01-01", "2021-01-01", sch)

# Except Labor Day in 2019
sch2 <- sch \%>\%
  sch_exdate("2019-09-02")

sch_seq("2019-01-01", "2021-01-01", sch2)

}
